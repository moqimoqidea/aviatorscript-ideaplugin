<idea-plugin>
    <id>AviatorScript</id>
    <name>AviatorScript</name>
    <vendor email="yanchangyou@qq.com" url="http://www.321zou.com">321zou</vendor>
    <idea-version since-build="231" until-build="232.*" />
    <description><![CDATA[

       <br/>
       Aviator is a lightweight, high performance scripting language hosted on the JVM. It compiles script to java byte code and evaluate it on the fly.<br/>
       <br/>

       Feature Intro:<br/>
       <ol>
       <li>Support number,string, boolean and regular expression etc. basic types, support all java operators and their priorities.</li>
       <li>Function is first-class, supports closure and functional programming.</li>
       <li>Supports bigint/decimal for big integer and big decimal operations, using normal arithmetic operators +-*/ by operator overloading.</li>
       <li>Full-featured scripting language syntax, such as multi statements, conditional statement, for/while loop, lexical scope and exception handling.</li>
       <li>Processing collections/array conveniently by sequence abstract and functional programming.</li>
       <li>Lightweight module system.</li>
       <li>Call Java methods conveniently, supports Java Scripting API.</li>
       <li>A wide range of customization options to be used as a secure runtime scripting sandbox or full-featured scripting language.</li>
       <li>Lightweight and high performance.</li>
       </ol>
       <br/>

       Links:<br/>
       <ol>
        <li><a href="https://github.com/killme2008/aviatorscript/blob/master/README-EN.md">GitHub: AviatorScript</a></li>
        <li><a href="https://github.com/yanchangyou/aviatorscript-ideaplugin">GitHub: AviatorScript IDEA plugin</a></li>
       </ol>
       <br/>

    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="av" implementationClass="my.lang.MyLanguageFileType" fieldName="INSTANCE" language="av"
                  extensions="av"/>
        <lang.parserDefinition language="av" implementationClass="my.lang.parser.MyLanguageParserDefinition"/>
        <lang.syntaxHighlighterFactory language="av"
                                       implementationClass="my.lang.highlight.MyLanguageSyntaxHighlighterFactory"/>
        <colorSettingsPage id="av" implementation="my.lang.highlight.MyLanguageColorSettingsPage"/>
        <lang.psiStructureViewFactory language="av"
                                      implementationClass="my.lang.structure.MyLanguageStructureViewFactory"/>
        <completion.contributor language="av"
                                implementationClass="my.lang.completion.MyLanguageCompletionContributor"/>
<!--        <lang.formatter language="av" implementationClass="my.lang.format.MyLanguageFormattingModelBuilder"/>-->
        <codeStyleSettingsProvider implementation="my.lang.style.MyLanguageCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="my.lang.style.MyLanguageLanguageCodeStyleSettingsProvider"/>

        <toolWindow id="AviatorScript Console" anchor="bottom" order="first"
                    factoryClass="my.lang.action.ScriptConsoleWindowFactory"/>
        <lang.commenter language="av" implementationClass="my.lang.comment.MyLanguageCommenter"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="RunAviatorScript" class="my.lang.action.ScriptRunCodeAction" text="Run AviatorScript"
                description="Run aviatorScript"
                icon="/my/lang/icon/av.svg">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <keyboard-shortcut first-keystroke="control shift J" keymap="$default"/>
        </action>

    </actions>

    <change-notes>
        <![CDATA[
        AviatorScript update list:<br/>
        <br/>

        <ul>
            <li>5.3.3, Fixed memory leak in lambda function caching. ● Fixed wrong value captured by function</li>
            <li>5.3.0, Interpreter mode to run on Android or other not-standard JVM. ● Fixed assign and define operator can't work when enable TRACE_EVAL</li>
            <li>5.2.1, Fixed memory leak in reflector, supports calling static method directly etc.</li>
            <li>5.2.0, supports overload function, variadic function,use statement and more sequence/math functions.</li>
            <li>5.1.4, fixed compiling string interpolation lexeme without caching(may cause FGC) etc.</li>
            <li>5.1.3, supports exponent operator ** and EnvProcessor hooks etc.</li>
            <li>5.1.2, don't override __exp__ to user passed-in env.</li>
            <li>5.1.1, fixed == and != operator working with variable syntax sugar such as a.b.c may return wrong result, it's recommended to upgrade.</li>
        </ul>
        <br/>

        AviatorScript IDEA plugin update list:<br/>
        <br/>

        <ul>
            <li>5.3.3-2023.03.20, update AviatorScript to 5.3.3</li>
            <li>5.2.2-2021.01.14, update AviatorScript to 5.2.2</li>
            <li>203-5.2.1-2020.12.19, support IDEA-202.3 and update AviatorScript to 5.2.1</li>
            <li>5.2.0-2020.11.20, update AviatorScript to 5.2.0</li>
            <li>2020.11.07, support AviatorScript comment</li>
            <li>2020.11.03, support AviatorScript highlight, grammar check and execute</li>
        </ul>]]>
    </change-notes>
</idea-plugin>